<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='CovidDataVisualization_16672984065670' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='TABLE 1' inline='true' name='federated.01e8nn70i7zkot1a8m2a007x18yq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MK\SQLEXPRESS' name='sqlserver.1jwx7uv0dzz1ua19d9j310jbageh'>
            <connection authentication='sspi' class='sqlserver' dbname='SQLProject' odbc-native-protocol='yes' one-time-sql='' server='MK\SQLEXPRESS' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1jwx7uv0dzz1ua19d9j310jbageh' name='Custom SQL Query' type='text'>select sum(new_cases) as total_cases, sum(cast(new_deaths as bigint)) as total_death, sum(cast(new_deaths as bigint))/sum(new_cases) deathpercentage&#13;
 from SQLProject..Covid_deaths&#13;
 where continent is not null</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1jwx7uv0dzz1ua19d9j310jbageh' name='Custom SQL Query' type='text'>select sum(new_cases) as total_cases, sum(cast(new_deaths as bigint)) as total_death, sum(cast(new_deaths as bigint))/sum(new_cases) deathpercentage&#13;
 from SQLProject..Covid_deaths&#13;
 where continent is not null</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_27B9837B4C484EB683CE3EA4B88F2DF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_death]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_death</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_27B9837B4C484EB683CE3EA4B88F2DF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathpercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deathpercentage]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>deathpercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_27B9837B4C484EB683CE3EA4B88F2DF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_27B9837B4C484EB683CE3EA4B88F2DF7]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/mkmah/OneDrive - Indian Institute of Science Education and Research Bhopal/Documents/My Tableau Repository/Datasources/TABLE 1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/01/2022 11:14:30 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='TABLE 1' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2022-11-01 11:14:29.442' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_27B9837B4C484EB683CE3EA4B88F2DF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_death</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_death]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_death</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_27B9837B4C484EB683CE3EA4B88F2DF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deathpercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deathpercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deathpercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_27B9837B4C484EB683CE3EA4B88F2DF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_27B9837B4C484EB683CE3EA4B88F2DF7'>
            <properties context=''>
              <relation connection='sqlserver.1jwx7uv0dzz1ua19d9j310jbageh' name='Custom SQL Query' type='text'>select sum(new_cases) as total_cases, sum(cast(new_deaths as bigint)) as total_death, sum(cast(new_deaths as bigint))/sum(new_cases) deathpercentage&#13;
 from SQLProject..Covid_deaths&#13;
 where continent is not null</relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='table 6' inline='true' name='federated.0mb329v0iq4sup1e5qql00kbgogu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MK\SQLEXPRESS' name='sqlserver.026ln8c15t3veg166w6q81p0v1ac'>
            <connection authentication='sspi' class='sqlserver' dbname='SQLProject' odbc-native-protocol='yes' one-time-sql='' server='MK\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.026ln8c15t3veg166w6q81p0v1ac' name='Custom SQL Query' type='text'>select isnull(sum(total_cases),0) as total_case,location,date&#13;
from covid_deaths&#13;
where continent is not null&#13;
group by location,date</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.026ln8c15t3veg166w6q81p0v1ac' name='Custom SQL Query' type='text'>select isnull(sum(total_cases),0) as total_case,location,date&#13;
from covid_deaths&#13;
where continent is not null&#13;
group by location,date</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_case]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_case</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_DA2E3DD9F0774137A902BF14FB5B494D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_DA2E3DD9F0774137A902BF14FB5B494D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_DA2E3DD9F0774137A902BF14FB5B494D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_DA2E3DD9F0774137A902BF14FB5B494D]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/mkmah/OneDrive - Indian Institute of Science Education and Research Bhopal/Documents/My Tableau Repository/Datasources/table 7.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/01/2022 12:00:06 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='table 6' increment-value='%null%' refresh-type='create' rows-inserted='218339' timestamp-start='2022-11-01 12:00:04.748' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_case</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_case]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_case</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44556</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_DA2E3DD9F0774137A902BF14FB5B494D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>394</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_DA2E3DD9F0774137A902BF14FB5B494D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>5033</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_DA2E3DD9F0774137A902BF14FB5B494D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_DA2E3DD9F0774137A902BF14FB5B494D'>
            <properties context=''>
              <relation connection='sqlserver.026ln8c15t3veg166w6q81p0v1ac' name='Custom SQL Query' type='text'>select isnull(sum(total_cases),0) as total_case,location,date&#13;
from covid_deaths&#13;
where continent is not null&#13;
group by location,date</relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Tablel 5' inline='true' name='federated.0x0kq0i1s2e3ta19xedkt12ph1gi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MK\SQLEXPRESS' name='sqlserver.0i1k1zi0ctbpax1fccbip0jdsn88'>
            <connection authentication='sspi' class='sqlserver' dbname='SQLProject' odbc-native-protocol='yes' one-time-sql='' server='MK\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.0i1k1zi0ctbpax1fccbip0jdsn88' name='Custom SQL Query' type='text'>select date,new_cases,location&#13;
from covid_deaths&#13;
where continent is not null</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.0i1k1zi0ctbpax1fccbip0jdsn88' name='Custom SQL Query' type='text'>select date,new_cases,location&#13;
from covid_deaths&#13;
where continent is not null</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_EEDC5418E8E34A50A33AB54D74BA598C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_EEDC5418E8E34A50A33AB54D74BA598C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_EEDC5418E8E34A50A33AB54D74BA598C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_EEDC5418E8E34A50A33AB54D74BA598C]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/mkmah/OneDrive - Indian Institute of Science Education and Research Bhopal/Documents/My Tableau Repository/Datasources/Table 6.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/01/2022 12:28:49 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Tablel 5' increment-value='%null%' refresh-type='create' rows-inserted='218339' timestamp-start='2022-11-01 12:28:48.649' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>5376</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9308</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>379</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_EEDC5418E8E34A50A33AB54D74BA598C'>
            <properties context=''>
              <relation connection='sqlserver.0i1k1zi0ctbpax1fccbip0jdsn88' name='Custom SQL Query' type='text'>select date,new_cases,location&#13;
from covid_deaths&#13;
where continent is not null</relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='TABLE 2' inline='true' name='federated.17bb3ev0ir6qdt1alje3z1d1j7ca' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MK\SQLEXPRESS' name='sqlserver.1u6p5fi1y2v5iw1ar9ycc076vh8o'>
            <connection authentication='sspi' class='sqlserver' dbname='SQLProject' odbc-native-protocol='yes' one-time-sql='' server='MK\SQLEXPRESS' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1u6p5fi1y2v5iw1ar9ycc076vh8o' name='Custom SQL Query' type='text'>select location, sum(cast(new_deaths as bigint)) as total_death&#13;
from SQLProject..Covid_deaths&#13;
where continent is null and location not in (&apos;world&apos;,&apos;European Union&apos;,&apos;International&apos;,&apos;Lower middle income&apos;,&apos;Upper middle income&apos;,&apos;Low income&apos;,&apos;High income&apos;)&#13;
group by location</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1u6p5fi1y2v5iw1ar9ycc076vh8o' name='Custom SQL Query' type='text'>select location, sum(cast(new_deaths as bigint)) as total_death&#13;
from SQLProject..Covid_deaths&#13;
where continent is null and location not in (&apos;world&apos;,&apos;European Union&apos;,&apos;International&apos;,&apos;Lower middle income&apos;,&apos;Upper middle income&apos;,&apos;Low income&apos;,&apos;High income&apos;)&#13;
group by location</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_24E82942E0734CF6995E9408073F837D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_death]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>total_death</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_24E82942E0734CF6995E9408073F837D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_24E82942E0734CF6995E9408073F837D]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Death count' datatype='integer' name='[total_death]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/mkmah/OneDrive - Indian Institute of Science Education and Research Bhopal/Documents/My Tableau Repository/Datasources/TABLE 2.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/01/2022 10:24:45 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='TABLE 2' increment-value='%null%' refresh-type='create' rows-inserted='6' timestamp-start='2022-11-01 10:24:45.135' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_24E82942E0734CF6995E9408073F837D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_death</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_death]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_death</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_24E82942E0734CF6995E9408073F837D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_24E82942E0734CF6995E9408073F837D'>
            <properties context=''>
              <relation connection='sqlserver.1u6p5fi1y2v5iw1ar9ycc076vh8o' name='Custom SQL Query' type='text'>select location, sum(cast(new_deaths as bigint)) as total_death&#13;
from SQLProject..Covid_deaths&#13;
where continent is null and location not in (&apos;world&apos;,&apos;European Union&apos;,&apos;International&apos;,&apos;Lower middle income&apos;,&apos;Upper middle income&apos;,&apos;Low income&apos;,&apos;High income&apos;)&#13;
group by location</relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='TABLE 4' inline='true' name='federated.1azz4cy1vfqlcc14nkj8z1ftw69l' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MK\SQLEXPRESS' name='sqlserver.0ibox6u1pi18mw1fynhbj0iuynzc'>
            <connection authentication='sspi' class='sqlserver' dbname='SQLProject' odbc-native-protocol='yes' one-time-sql='' server='MK\SQLEXPRESS' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.0ibox6u1pi18mw1fynhbj0iuynzc' name='Custom SQL Query' type='text'>select ISNULL(location,0) as location,ISNULL(population,0) as population ,ISNULL(date,0) as date,ISNULL(sum(new_cases),0) as Highestinfectioncount,ISNULL(sum(new_cases)/population,0) as infectionpercentage&#13;
from SQLProject..Covid_deaths&#13;
where continent is not null &#13;
group by location,population,date</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.0ibox6u1pi18mw1fynhbj0iuynzc' name='Custom SQL Query' type='text'>select ISNULL(location,0) as location,ISNULL(population,0) as population ,ISNULL(date,0) as date,ISNULL(sum(new_cases),0) as Highestinfectioncount,ISNULL(sum(new_cases)/population,0) as infectionpercentage&#13;
from SQLProject..Covid_deaths&#13;
where continent is not null &#13;
group by location,population,date</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED22207D82D74C4FADD6B9502C69D885]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED22207D82D74C4FADD6B9502C69D885]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED22207D82D74C4FADD6B9502C69D885]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highestinfectioncount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Highestinfectioncount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Highestinfectioncount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED22207D82D74C4FADD6B9502C69D885]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infectionpercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infectionpercentage]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>infectionpercentage</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED22207D82D74C4FADD6B9502C69D885]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_ED22207D82D74C4FADD6B9502C69D885]' role='measure' type='quantitative' />
      <column caption='Infection Percentage' datatype='real' name='[infectionpercentage]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/mkmah/OneDrive - Indian Institute of Science Education and Research Bhopal/Documents/My Tableau Repository/Datasources/TABLE 4.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/01/2022 10:25:18 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='TABLE 4' increment-value='%null%' refresh-type='create' rows-inserted='218339' timestamp-start='2022-11-01 10:25:17.130' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>366</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED22207D82D74C4FADD6B9502C69D885]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>366</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED22207D82D74C4FADD6B9502C69D885]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>5316</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED22207D82D74C4FADD6B9502C69D885]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highestinfectioncount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Highestinfectioncount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Highestinfectioncount</remote-alias>
              <ordinal>3</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10124</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED22207D82D74C4FADD6B9502C69D885]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>infectionpercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[infectionpercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>infectionpercentage</remote-alias>
              <ordinal>4</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58114</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_ED22207D82D74C4FADD6B9502C69D885]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_ED22207D82D74C4FADD6B9502C69D885'>
            <properties context=''>
              <relation connection='sqlserver.0ibox6u1pi18mw1fynhbj0iuynzc' name='Custom SQL Query' type='text'>select ISNULL(location,0) as location,ISNULL(population,0) as population ,ISNULL(date,0) as date,ISNULL(sum(new_cases),0) as Highestinfectioncount,ISNULL(sum(new_cases)/population,0) as infectionpercentage&#13;
from SQLProject..Covid_deaths&#13;
where continent is not null &#13;
group by location,population,date</relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='TABLE 3' inline='true' name='federated.1jm77000sgva9z0zu1wmh11o8ez8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MK\SQLEXPRESS' name='sqlserver.1mvqoru0kr4xcv17z5mwk03lyc33'>
            <connection authentication='sspi' class='sqlserver' dbname='SQLProject' odbc-native-protocol='yes' one-time-sql='' server='MK\SQLEXPRESS' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1mvqoru0kr4xcv17z5mwk03lyc33' name='Custom SQL Query' type='text'>select ISNULL(location,0) as location ,ISNULL(population,0) as population,ISNULL(max(new_cases),0) as Highestinfectioncount,ISNULL(sum(new_cases)/population,0) as infectionpercentage&#13;
from SQLProject..Covid_deaths&#13;
where continent is not null&#13;
group by location,population</_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1mvqoru0kr4xcv17z5mwk03lyc33' name='Custom SQL Query' type='text'>select ISNULL(location,0) as location ,ISNULL(population,0) as population,ISNULL(max(new_cases),0) as Highestinfectioncount,ISNULL(sum(new_cases)/population,0) as infectionpercentage&#13;
from SQLProject..Covid_deaths&#13;
where continent is not null&#13;
group by location,population</_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_64035EFA6EFC4B0094CD9D859F345C13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_64035EFA6EFC4B0094CD9D859F345C13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highestinfectioncount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Highestinfectioncount]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Highestinfectioncount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_64035EFA6EFC4B0094CD9D859F345C13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infectionpercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infectionpercentage]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>infectionpercentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_64035EFA6EFC4B0094CD9D859F345C13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_64035EFA6EFC4B0094CD9D859F345C13]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/mkmah/OneDrive - Indian Institute of Science Education and Research Bhopal/Documents/My Tableau Repository/Datasources/TABLE 3.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/01/2022 10:25:32 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='TABLE 3' increment-value='%null%' refresh-type='create' rows-inserted='235' timestamp-start='2022-11-01 10:25:31.441' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>235</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_64035EFA6EFC4B0094CD9D859F345C13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>235</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_64035EFA6EFC4B0094CD9D859F345C13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Highestinfectioncount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Highestinfectioncount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Highestinfectioncount</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_64035EFA6EFC4B0094CD9D859F345C13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>infectionpercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[infectionpercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>infectionpercentage</remote-alias>
              <ordinal>3</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_64035EFA6EFC4B0094CD9D859F345C13]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_64035EFA6EFC4B0094CD9D859F345C13'>
            <properties context=''>
              <relation connection='sqlserver.1mvqoru0kr4xcv17z5mwk03lyc33' name='Custom SQL Query' type='text'>select ISNULL(location,0) as location ,ISNULL(population,0) as population,ISNULL(max(new_cases),0) as Highestinfectioncount,ISNULL(sum(new_cases)/population,0) as infectionpercentage&#13;
from SQLProject..Covid_deaths&#13;
where continent is not null&#13;
group by location,population</relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Offline' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TABLE 1' name='federated.01e8nn70i7zkot1a8m2a007x18yq' />
          </datasources>
          <datasource-dependencies datasource='federated.01e8nn70i7zkot1a8m2a007x18yq'>
            <column datatype='real' name='[deathpercentage]' role='measure' type='quantitative' />
            <column-instance column='[deathpercentage]' derivation='Sum' name='[sum:deathpercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_death]' derivation='Sum' name='[sum:total_death:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_death]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01e8nn70i7zkot1a8m2a007x18yq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01e8nn70i7zkot1a8m2a007x18yq].[sum:deathpercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01e8nn70i7zkot1a8m2a007x18yq].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01e8nn70i7zkot1a8m2a007x18yq].[sum:total_death:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.01e8nn70i7zkot1a8m2a007x18yq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01e8nn70i7zkot1a8m2a007x18yq].[sum:total_death:qk]&quot;</bucket>
              <bucket>&quot;[federated.01e8nn70i7zkot1a8m2a007x18yq].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.01e8nn70i7zkot1a8m2a007x18yq].[sum:deathpercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.01e8nn70i7zkot1a8m2a007x18yq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.01e8nn70i7zkot1a8m2a007x18yq].[:Measure Names]' value='92' />
            <format attr='width' value='236' />
            <format attr='height' value='43' />
            <format attr='width' field='[federated.01e8nn70i7zkot1a8m2a007x18yq].[:Measure Names]' value='143' />
            <format attr='color' value='#f9a655' />
            <format attr='text-format' field='[federated.01e8nn70i7zkot1a8m2a007x18yq].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.01e8nn70i7zkot1a8m2a007x18yq].[sum:deathpercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#0ef51e' />
            <format attr='border-color' data-class='subtotal' value='#d3b348' />
            <format attr='height' field='[federated.01e8nn70i7zkot1a8m2a007x18yq].[:Measure Names]' value='48' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='band-color' scope='cols' value='#f5ead7' />
            <format attr='border-color' data-class='subtotal' value='#9d7660' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.01e8nn70i7zkot1a8m2a007x18yq].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.022099494934082' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.01e8nn70i7zkot1a8m2a007x18yq].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B1138843-33BB-43A9-89AF-732B256982CA}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true'>Total Deaths over Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TABLE 2' name='federated.17bb3ev0ir6qdt1alje3z1d1j7ca' />
          </datasources>
          <datasource-dependencies datasource='federated.17bb3ev0ir6qdt1alje3z1d1j7ca'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_death]' derivation='Sum' name='[sum:total_death:qk]' pivot='key' type='quantitative' />
            <column caption='Death count' datatype='integer' name='[total_death]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17bb3ev0ir6qdt1alje3z1d1j7ca].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17bb3ev0ir6qdt1alje3z1d1j7ca].[sum:total_death:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#f2f9f9' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='background-color' field='[federated.17bb3ev0ir6qdt1alje3z1d1j7ca].[none:location:nk]' value='#faf4e7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ffffff' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#ffffff' />
            <format attr='background-color' data-class='total' scope='rows' value='#ffffff' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.17bb3ev0ir6qdt1alje3z1d1j7ca].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17bb3ev0ir6qdt1alje3z1d1j7ca].[sum:total_death:qk]</rows>
        <cols>[federated.17bb3ev0ir6qdt1alje3z1d1j7ca].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{F9B8C543-8503-486B-ADE6-FA8CE00AF1BD}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true'>Infaction percentage vs Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TABLE 3' name='federated.1jm77000sgva9z0zu1wmh11o8ez8' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jm77000sgva9z0zu1wmh11o8ez8'>
            <column datatype='real' name='[infectionpercentage]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[infectionpercentage]' derivation='Sum' name='[sum:infectionpercentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jm77000sgva9z0zu1wmh11o8ez8].[Latitude (generated)]</column>
            <column>[federated.1jm77000sgva9z0zu1wmh11o8ez8].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[Longitude (generated)]' field-type='quantitative' max='17681614.221119963' min='-16105079.06291586' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[Latitude (generated)]' field-type='quantitative' max='14516053.095883654' min='-4982598.6289129891' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[sum:infectionpercentage:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[none:location:nk]' value='false' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[sum:infectionpercentage:qk]' />
              <lod column='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[none:location:nk]' />
              <geometry column='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.087458610534668' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jm77000sgva9z0zu1wmh11o8ez8].[Latitude (generated)]</rows>
        <cols>[federated.1jm77000sgva9z0zu1wmh11o8ez8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{965DE184-240C-4771-92A8-4CFF9897E21E}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true'>Percentage Population Infected  </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TABLE 4' name='federated.1azz4cy1vfqlcc14nkj8z1ftw69l' />
          </datasources>
          <datasource-dependencies datasource='federated.1azz4cy1vfqlcc14nkj8z1ftw69l'>
            <column datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[infectionpercentage]' derivation='Sum' forecast-column-base='[sum:infectionpercentage:qk]' forecast-column-type='forecast-value' name='[fVal:sum:infectionpercentage:qk]' pivot='key' type='quantitative' />
            <column caption='Infection Percentage' datatype='real' name='[infectionpercentage]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[infectionpercentage]' derivation='Sum' name='[sum:infectionpercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[none:location:nk]' />
              <text column='[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[none:location:nk]' />
              <color column='[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4f17f5' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[fVal:sum:infectionpercentage:qk]</rows>
        <cols>[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[tmn:date:qk]</cols>
        <page-trail-options enabled='true' start='0' />
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{E4259662-B09E-4BD5-A97A-249938E9F3C1}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[New cases vs date  - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tablel 5' name='federated.0x0kq0i1s2e3ta19xedkt12ph1gi' />
          </datasources>
          <datasource-dependencies datasource='federated.0x0kq0i1s2e3ta19xedkt12ph1gi'>
            <column datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]' />
              <text column='[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]' />
              <text column='[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[sum:new_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[sum:new_cases:qk]</rows>
        <cols>[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[twk:date:qk]</cols>
        <pages>
          <column>[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[twk:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' line-color-auto='false' line-stroke-width='2' lines='true' mark-color='#f1ce63' mark-color-auto='false' mark-type='all' marks='false' trail-effect='none' />
      </table>
      <simple-id uuid='{96161A65-C47D-407C-B17D-2894050FA9E3}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='table 6' name='federated.0mb329v0iq4sup1e5qql00kbgogu' />
          </datasources>
          <datasource-dependencies datasource='federated.0mb329v0iq4sup1e5qql00kbgogu'>
            <column datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_case]' derivation='Sum' name='[sum:total_case:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_case]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mb329v0iq4sup1e5qql00kbgogu].[none:location:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_case])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:location:nk]' />
                  <groupfilter function='member' level='[none:location:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mb329v0iq4sup1e5qql00kbgogu].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0mb329v0iq4sup1e5qql00kbgogu].[sum:total_case:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mb329v0iq4sup1e5qql00kbgogu].[none:location:nk]</rows>
        <cols>[federated.0mb329v0iq4sup1e5qql00kbgogu].[sum:total_case:qk]</cols>
        <pages>
          <column>[federated.0mb329v0iq4sup1e5qql00kbgogu].[twk:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{2A59247C-028F-4FD7-BB55-92BD12EC286B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Tablel 5' name='federated.0x0kq0i1s2e3ta19xedkt12ph1gi' />
      </datasources>
      <datasource-dependencies datasource='federated.0x0kq0i1s2e3ta19xedkt12ph1gi'>
        <column datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='20' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='9' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
              <zone h='98120' id='7' type-v2='layout-basic' w='85697' x='483' y='940'>
                <zone h='34547' id='5' name='Sheet 2' w='32830' x='483' y='24912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39601' id='21' name='Sheet 5' w='85697' x='483' y='59459'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='58519' id='25' name='Sheet 3' w='52867' x='33313' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='23972' id='27' name='Sheet 1' w='32830' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='221' h='98120' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='13337' x='86180' y='940'>
                <zone h='67098' id='22' name='Sheet 5' param='[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]' type-v2='filter' w='13337' x='86180' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8461' id='23' name='Sheet 5' pane-specification-id='2' param='[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]' type-v2='color' w='13337' x='86180' y='68038'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13983' id='24' name='Sheet 5' synchronized='1' type-v2='currpage' w='13337' x='86180' y='76499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8578' id='26' name='Sheet 3' pane-specification-id='1' param='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[sum:infectionpercentage:qk]' type-v2='color' w='13337' x='86180' y='90482'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='28' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='183' h='23972' id='27' is-fixed='true' name='Sheet 1' w='32830' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58519' id='25' is-fixed='true' name='Sheet 3' w='52867' x='33313' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='26' name='Sheet 3' pane-specification-id='1' param='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[sum:infectionpercentage:qk]' type-v2='color' w='13337' x='86180' y='90482'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='34547' id='5' is-fixed='true' name='Sheet 2' w='32830' x='483' y='24912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='67098' id='22' mode='checkdropdown' name='Sheet 5' param='[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]' type-v2='filter' w='13337' x='86180' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39601' id='21' is-fixed='true' name='Sheet 5' w='85697' x='483' y='59459'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8461' id='23' name='Sheet 5' pane-specification-id='2' param='[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]' type-v2='color' w='13337' x='86180' y='68038'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13983' id='24' name='Sheet 5' synchronized='1' type-v2='currpage' w='13337' x='86180' y='76499'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{24A10DF3-E0B2-4254-8418-6FCC249B12C6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='167'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01e8nn70i7zkot1a8m2a007x18yq].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{893B2E7C-ED0A-4C76-9536-80AF6908C738}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='223'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17bb3ev0ir6qdt1alje3z1d1j7ca].[none:location:nk]</field>
            <field>[federated.17bb3ev0ir6qdt1alje3z1d1j7ca].[sum:total_death:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1EDAB29-CC67-47D7-B811-9F2088E2F9D0}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1jm77000sgva9z0zu1wmh11o8ez8].[sum:infectionpercentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jm77000sgva9z0zu1wmh11o8ez8].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{912B7881-2B35-46E3-B608-38CBAD4C409B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='193'>
            <card param='[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[none:location:nk]&#10;[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-02-10 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[none:Forecast Indicator:nk]</field>
            <field>[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[none:location:nk]</field>
            <field>[federated.1azz4cy1vfqlcc14nkj8z1ftw69l].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50A5C6CA-7DC7-4580-B628-0482B0AB171F}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='2' param='[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-02-14 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]</field>
            <field>[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[tdy:date:qk]</field>
            <field>[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[twk:date:qk]</field>
            <field>[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3BFB204-B2B8-49A8-802D-CD231E05C26C}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <current-page>
            <multibucket>
              <bucket>#2020-10-04 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0x0kq0i1s2e3ta19xedkt12ph1gi].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='24' />
      <simple-id uuid='{7911F470-19E0-46E8-B978-F0B753D93335}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-09-18 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0mb329v0iq4sup1e5qql00kbgogu].[none:location:nk]</field>
            <field>[federated.0mb329v0iq4sup1e5qql00kbgogu].[tdy:date:qk]</field>
            <field>[federated.0mb329v0iq4sup1e5qql00kbgogu].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63EAD5FD-0F36-4BD3-BAFF-230585B95323}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='95' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      pzjZ18wf/88XK7KHJzN5fO7yBDDc3cD0QoRMgbzmogJQVY2JK2+ylrCmAH46vsSttcS2Nuf9
      RpIknjjVxR98+nFeHpnjL//+jR0zs6bmw0zOh3nfowc7Pl8qkiTxC4/28ZEnBvmTr7zM9EKk
      LE/UhgDKG4hQZInh7gYuT91b5bygAEZHLuLwh/jUr32Wsw8Pl/XHHgSiySxPPzfC7/ziwyUv
      uLyf1Nd4+Pyv/hyn+5v4oy//mJcuzxZ8j1Y1nS997wK/9YGHDnyGtlwePtrKP/3wo/yXb77B
      N/7f1ZJKGZqmSSqrlm3ukySJx0928vLIvfaNgsMDXW0tfP/5F4lGYrR09XOkq7WsP3g/k8zk
      +atvvsHH3z28b/aESpAliXed7uZEbxNfff4K/+ela/jdDnpbaznaUU9vay2vXJljqKuenpZ7
      C5lVI90tQf79597Djy/O8KdffZUar5P3PtzLyb6mgjV/8qqOTZZRKngoDbTX8aXwhXvMgQUF
      4As10VrnY2ltDX/D/g79VQOmabIey/D9Nya5OLnEk6e7eWyoOq87FHDzu7/8CJpuEEtmmVqI
      cH1unWfPTZHNafzhbzxRFR3fUvG47Pzjtx/hfY/2cWMhynPnp/naC6Oc6muiuyVI0Oci6HPh
      9zjI5jScFSb2yLLE6f5mfjqxyJOnu7c+L+4Fiscx2Z9Jn2rBNE3mVuJ855XrzC7HeN8jffzx
      Z9+Ne58mu/YSmyJTV+OhrsazNRFVrQtal4Iiy/S3h+hvD5HM5Lkwvsj8aoLRG6tEk1mS6RzZ
      vLarWfJ3nOjg6R+O8K5T3Wx+TQUFEFldpK3vGAChAnVBAdRcmmgyT30oiCRBPLKO7PLhtsFa
      NElTQx2R9RVc/hDuA5yI2YlMTuXmcoxrN9e4MLGILEk8dXaA3/vwI/ftzbPJ/R7/Jj63g3ee
      6trz83Y0Boinc6xEkzQGvUiShGQW6ILHI6usrMcACIQaaAzdq7qroyO4FQh0DlOjZLg+tYCh
      qzhs4PfaSWZtGDYbWibN8WODWzboct2gmm6QU7cZMzbv/NE0TVTdIJvTSGXzpLIqqUye2eUY
      E7fCJNJ5OpoCDHXVM9zdQEvIv6O3XPDg8KPzN/j+G5NouoHLrhQWQCmMT4zTU+/ilt5IizvJ
      SlRGT62TBQb7Wzj38ih9Z04RXpijr79vKydgUwCbuQGy/DOzlK7rSJK0tY9hGLw6Os+z54on
      kt9968ryRs1It9OO12XH47LjdTloDnnoa62lMegFNhYAVxSlaCx3C7bUeA/rvHcfs7nP5jGb
      +9zP17jdQ7Tc6zUMk0xerVwANyevsx7PMDg0gK6bzEyNo7gCBN2wshajq7+fm1PTeGrqGOjt
      qLgFEAj2k4oFUC5CAIJqRNyNAksjBCCwNEIAAksjBCCwNEIAAksjBCCwNEIAAksjBCCwNEIA
      AksjBCCwNEIAAktTsQBi68tcn5zZSGg2TeZuTLKwEiYVC3NtbALNMJmfvUEmf39XgxY82FSc
      qbKwGqbVb2chrtFgT5GXvOjrK8Qw6ekIcWNmGSkbJZnvwGXfsKM+COXRBQ8WZQtAy6WZWVhD
      lmUcdgXdMDFNA0WxYcoyOuBwOEDSqAn8rC6NaZpVscKgQPBWKrZDry7OsRTJMNjXQU6XWJ67
      geKppdYNMwvrHDnSw+TYVRRfA8eOdAk7tKAqEfkAAksj7kaBpRECEFgaIQCBpRECEFgaIQCB
      pRECEFgaIQCBpRECEFgaIQCBpRECEFgaIQCBpanYDj1+bYR4IsvQQw/jJs/Fy1eQHT6CbpNo
      PElz5wCRlVtkNIkzJ623zpjg/qBsM9ymHdrQsvQ2uJhVG2l1J1mNKWipta3y6FNTcfzuPGnT
      SVdb01b56wdlEQfBg0HFbtCx0ctkMjm6B49hM1UmxieR7G4CTpNMNosvUMeNW0v09fXQ2dok
      3KCCqqRiAZiGgW6YKIqEaUqYpo4kyUgS6LqBosho2sZnNpsiBCCoSkQ+gMDSiLtRYGmEAASW
      RghAYGmEAASWRghAYGmEAASWRghAYGmEAASWRghAYGmEAASWpmIBqNkUy2thNo0UsfAqiXQO
      Xc2xuLyKaegszs8RT2X3KlaBYM+pOB9gYmoar10i7AlQo2SYX45haCvYFAgGnMwsyAS9PqYm
      Jnjo9Im9jFkg2DMqLo9uczhprXdxK63hdefxBULoqXWyQFNLE1M3ksRzMSS7A8MwtvIBxPoA
      gmqiYjfozalx1mMZBoePoGsmN6cnkF0Bal2wvB6lvbuXlYV5dNnBiaEjwg0qqEqEHVpgacTd
      KLA0QgACSyMEILA0QgACSyMEILA0QgACSyMEILA0QgACSyMEILA0QgACSyMEILA0Fduhb81M
      shrNcPzkcWzoXLs6iuIKUus2WViN0j90gnxkjqWkneH+tr2MWSDYM8oWgKFrpDI50qrBsc4A
      85E8za4kvmA7WjrMegpOHu9lYnIWSc4hmQg7tKBqKVsApqGTTmfJ5/OsR3W8TQqKYiedCaPn
      88iSSSwcIa/rkM+wsB5h6Gj31vHCDSqoJiq2Q+fSCVaiaVrqA+R0hUx8FZsnhM8Jt5bCdHe2
      gamTyuTxetzCDi2oSkQ+gMDSVNwJroTNfoBAUC0cWAvwVgzDuKclMAwDSZLuWUNM13UURSnp
      HJuXcvc5Cu1b7ud7cY7tzl3o2oudo5zvpJw4TNPENM0Dv/bdnmM338ehCKAcxMJ69yK+kzvZ
      zfdR9QIQCPaTA+0D7ISuZpmYmEKTnQSdJmuxNL19PczNzmFz+XDoaWJZg+PHh7HJ1ngCavkM
      E5PTmDY3PptGOJGjt6eDubl5HO4AXiVLwnBztKf9sEM9MOZvTrEaSVLr9xKJJ+jsO8LyrZsY
      spOQz8bqepTOviGCPueO56qqIRnZ5qS9rRlFlsmocLS3lVhSo62pDlk20HDRUesjns0fdqgH
      hmJ30d7SiCxL5DSZvvYGUnmZloZaZEWmsaUdU7fO9wHQ0taBy64QT6ucOnWE9eU4HW3NyLJM
      U0sbbqe95FeiqhKAlk0wNbdKT3cHmpojHI5g5hPMrWfoam8jn0sTSaVwFOjwPKho6Sg3FqP0
      dLaj5rNEojG0VJjFuEpHaxO6pqLm8xiWeZM1GR8bo6mjG4eis768CorO1K2N+2ZqfIza5k78
      bntJZ6sqAUiKnYDbzupamP6+HmR3iOaGEB6bwXokQV9vB/76VnzOqnpz219sTnxOmbVwlP6+
      buz+ehrqQ7gkjXA0Tng9gsdpJ69bRQAQrA0SXl2lu6eXrOmmp72egMvO6lqEmmAtsfVVcqpe
      0rlEJ1hgaaqqBRAIDhohAIGlEQIQVDeGztLKKgAry0toRuE3dkPXSKYyZZ9eCEBQ3eTj/Lcv
      fol4NskX/uIvWIkkOP/mOeKJJJPjV5mdu8V//eIXmZ6+zne++wzXJm+WdXohAEHVc2yoixef
      fZH2gaOce/5HNPcf4flnvoXi9fHmxSs0NzXT3hTCE6jj2sj5ss5tofFEwX2JpNDUOcjCzXEG
      O5upqWti9PybtPcM4vV4CPj92PI682tx6kJBcimtvNOLYVCBlRGvQAJL8/8BUUK6G84KsyoA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dWWxcWXrff7f2jUVWkaziLmqjFkqillare6Z7uqdnJphxFm9je7wkGBjI
      ggDxY4IACTIxEL8EeUiQBwN5CAJPAAO2x06c8bTH06ukbu0LKW7ivlUVa2Ox9rrbyQOlXmZa
      VKt12XWlOr8HamHxX+dc3n/d75zzfecoQgiBRNKiOJrdAImkmUgDSFoaaQBJSyMNIGlppAEk
      LY00gKSlsY0BTNO0pZYQwjI9q7WsnMG26/Xf6+tlGwPY9ZcJ1rbNKi0rzQT2vGmt1DJN8zOv
      vcsSdQsQQjCzmrVEyzAMnE6nJVpCCIQpcDif/rPi4aeQw2EPreGeDnwe29wCTcE2vTdMwb/5
      4581uxktxX/9V99muLej2c1oKrYJgSSSZiANIGlppAEkLc2eGaC0lWFqappCufbo1xRLlEtF
      DJmP2jTUWolL77/PVrmOqdeYmlmkWszx3nsXqag6CMHawjTX70xhGDrzc4sIBAvTd1lY29zR
      qBb42Zt/y/zaJpM3r/DOBzeol/NcunyFumbtjJzV7JkBCsUiBw4Os7K0RGp9mY3kJnOz06yn
      sqwvz3N3cpZavU46sYEuDdA0arU6Y6eOMHF3hjs3bjK3tEytoXPmWJzbd9cAgSfUhVlcZyOV
      5s7NKcxKmtWig5X5ewAkF++R07z0xbu4fW+cocEBrt0Y5+SRPq5cn25uBx/DnhnAUGvcn1vC
      FwiQK5SIRUI0VJ21tVXaQkG6u2Pkcrm9envJ58SpGFy5NcuZ43GuT8wzNzNFtVLixuwWL50b
      BhQy6wsEe44w2NdHPBrGVOsEwhG8Ph8Ag8de5pffOMP7b13kN3/7+6zeukXPvjjXb9+lWqk3
      tX+PY8+mQQOBEGW1gsfjJdLmBwQChXA4zMrqGv5IL+FwGLcicALGXjVEsisr8/Ooap102ck/
      /6ffZ2pqhsTKEnpDsLq8hIGbueUVwp06YbfKcmKFzvw+tNQUhOLcn5kkHAwwMX2fwcMj3Lh8
      Ca0tTLvHi2H6uPCV0WZ3cVcUu1SENVSN3/zBXzS7GS3FJ9cBdF3H5fr056Gm1sHpwf3IRUBB
      rVrHH/B/6n8/S+uLYpWWYRgoivILC4e2WQiT2A+3x/eYVyi/cPM/a8hpUElLIw0gaWlsEwI5
      FIVfffWoJVqmaVqScPYQIQSKojy9zo6YRVoCBE+lFQ56n7odzzq2GQRbmcFp5SDsYdqxFW2z
      Uutheq8dr5kdtR41CJYhkKSlkQaQtDS2GQMIIfi7G4uWaJmmgcNhTWiAEJgWFbHwoIhFsagg
      Bgu0zo700hl+tqcynwbbGMAwBf/9R9ea3YyW4w9///WWNoAMgSQtjTSApKWRBpC0NJYbQK1u
      M353gs1swWppyR5R3c7wzttvM7e2iaFWeP/ydbLri7z55t+yntkGQJga775/kcpWmrff+jvm
      l9e5+M5P+b8//gmNBwUdm8uTTC8muXbpPf7yR/+PQrnIxXfeYi1t33vB8kGwWquguAOEgm7u
      3b5NrL+fTCZNZ6yP3MYKpidIvMNHrqgSafeSyRY5fPQoT782KvmiuP1hzp89yfjMGqWNOlsl
      lZW1IsLhIejfWS2eunOT7HYeT7CdF86e4s7sOq++/i0uXbqI2wmmVmV2YQEj4ObVV77G1Q+v
      sHTrGgUNhLBvVdiehEA7y/MCj78Dt6miC0gk1wm0ddLmd5IvVTkycoDV5WUwDTTDvheoFWiU
      sly/t8SFs4eYWVhnbnKcwWMv8Y1XRrl1dQrQmJ6eZ3VuhtWVZW5OrvLy+TNklu7RuW8Uh6Kw
      OHmXXKnC1Nwclewq3uggwhScu/ASi9OTze7iI7H8CeAJtDE0GCXod9Md78Tn1HG7qnR1hAl4
      /SiYONCZm19m/8GDZPNlPG4nGLIkplls5/I0qkUWEiV+53e/x/LyKqKY4r3ZRUZPHmd8eo3v
      /u7vsbKyiFGvoFW3WFhJ4HeEOT7UyfT4LYZHL3DoxEmWUw22KgVOHx9G1KNcuvwhB0+ca3YX
      H4ltcoFkQUxz+MPff52xQz2PzLkRwkSg4Ngl6e7nkw+fpVwg2yyESeyJojgeOz6zMvP2y+bZ
      bblEYgHSAJKWxjYhkNOh8Ae//qIlWoZp4rTosbyTc2ZNgc2OlsDhsKAgxiKtwVj7U7flWcY2
      g2BZEPNkyIKYJ0MWxEgkn4E0gKSlsc0YwDQF/+tvb1uiJUyBYkGc/ZGeRYXslmqJB3vtfU6t
      b75wgKEWj/c/C/sYQAj+z6XZZjfjueXk/pg0wGcgQyBJSyMNIGlppAEkLc1TjwHy6QTJzBZd
      8X7iXa194qDdqWyl+ODGBJ29+1GqSdazKmPH+pmaWeTI2AX293Vy84P3SG/VOTl2hImJGQYP
      HsWjJikbfZwd28d2ZoOrtyfRFD/DXW6Wk0VOHtvP1Ow8B46fY2Qo1uxuPhFPaQBBKlOgNxZF
      RTA7eZeK5iLsBzxhKltJynUdv9PDgdHDrM4v0BEfIrt+H+FpJ9LmIxryIQJdBDzyYbTX+Ntj
      nB09zOx6kRdPnyf70/eYX03y4oUzXL02y/6+r7BVLFCv1tjMb2MIk8L2Fi+c2Me1i3kA2rv7
      eemUyuK2k6MHe8ln3+H+/ArnXnqZa5duMjL0jSb38sl46rtOmBrBjgj5VIZEMkXA50W4fBza
      P0go0kVntIPhnm4y2U1MAalMno6uOB1hP50hN7MbBblH5ZdEKb3CVLLCy+dP8uHli5z/+utc
      OH2S8Zs38YZDAGimk5P7Y8wsrHL2wssUtwr4/J/eJv3e3Cqjhwe5/uH7HH3xVV55+QVm79zA
      GQg1o1tPxVM+ARRGRg6ztLhM3759xLtDlDUHnZGdCxGPxTENA5/LhU8xSRppot0xPE4QKDiF
      SltAx6mAbkFnJLtjGFDNbTB534dTKFz/4Crnzo3gDsU5fbKfW+NznDp+mLVsg+9+5wLXr93g
      /PlzXL18k4oQ3LxxjaNjL3D46HHcDoFTcXL76lXOvTCKcAV5/aXzze7iE9PUXKBapYzbH8Tl
      UGRBzB7z7/7xq5w/1v/I79sxf8dKLVsWxPiDz94jU/J8IUeekpZGGkDS0timHkDXdRaS25Zo
      mYaBw6I8eR7k8FuiZ+FO00+6O3R/Vxshv+eR37dj3G6lli3HAJ9EURSODHZaoiULYiSfFxkC
      SVoaaQBJS2ObEMgwBf/pT96zRMvSApYdQRueErnzVbFoV9W9LPoZ6mnn+98+bYm21djGAEII
      bt5PNrsZkj2grtp3nV+GQJKWRhpA0tJIA0hamj0fAywtLTA8fODj/xCC9USC9nA7bW0Pc4Hk
      8RjPP4LbVy+ysFrgtdfP8eY7V/m93/hVrv7sz3Htf40XDsVILs9wa3KJaE8/opzi/mKSC+dP
      M7+ywsjoSxwZ7ubaxbdJbmu8cuEUV2+Mc+zUOWJ+jT/76XW+/71ffuJW7bkBGo0GE3dvouom
      PV0xsuUKDqebUrlMh1fhxuQi3/jWt3BJDzznKMRi3YzPp4l09THYG0VRFE6PneL21s7ZEKah
      0dAaqLrJa69+Hd1xncz2Nv/w7/8jPrjyAQx3YNDBi4d8XPzZRVyxbtLpFBulbQbj0S/Uqi8l
      BAq2Rxke6qNaqdPZ3Y3zwc2eK1bojYZp6PJwjOcfHc3wMhB0kNgqks1k2doukk5tks2kqVbr
      ZHM5Dh8dpVIqMD9xi4MnztDmhInJcRR3O7WaTr2WY34jyfChQSKRHiq5JNVamdu3brBV0Z64
      VXueC9RoNB7kYCgoOMhv5WkLt6MgMLUGNU3Q3h5G13VZD/CcMjrczR/9szfY3FijjpdowMFa
      MkNHZzfVrQya4kJXNY6PHmFlcYn4wDCKoeIPBNG1BusbSfpiHSxvltgXayNb1umPR9lYWSba
      O0TA66JSqRIMBh7ZhkflAtkmGU4WxDy/7Bjgi9UKy81xJZI9RBpA0tJIA0haGtuMAQzDoKFZ
      c16wlYdtwIOCGIcF9QAIhFVaQjw4IcaazzArr9nPazkcCj7PF4vjW6YgBiDgc1uio+uKLIh5
      Qqy8ZlZq7TUyBJK0NNIAkpbGNs8pwzT5F//lbyzREhYWilirJxCAgsJ//pffoiPke+xPSPYW
      2xhACEgXKs1uxpeGaY+5h5ZHhkCSlkYaQNLSSANIWpo9HwMYap3FlVWqlSr7D42g1Ur42yKs
      Li2y/8B+3C4HumhNH2YTy/z1u9f4/ne/zQ//9K8ZOXWGRmaZGh5e/OprRAIKf/bDH9J7eIzh
      WIB7k7N0Hxhh6oOLHDn3Vc6dOgLC4C/+5H8w8sp3Ka3dYi1VZ/R4H8lUgbMvv0pnSJ69sBtf
      yp0nFMfOip4DVpYWuXX3HghYXV4itbFG3aIV4GeNrr5h9g/GMHHR1xslnUgR641h1Ivk8lUw
      TeI9/aQ2k0S7YtTKRYKBAPHeAZKbOztoTN26QkfvMLVaneGhffTtG2RlZgmHaLC6lmpyD+3P
      l/PRqzjwOAX5/CZ1w/1R9dfwQIz5RJE2vzUrwM8a64vT3Lh+g/vL6zhwoakawgAhDPRamc1s
      EVwOdE0jsbFOsCPCZiKJw7vz2mw2QzTej0OvUCik+fMf/RhT0+kdiqGZCpiy0Ohx7Hku0G7y
      hUyCKgH6Y5GWqwf4n//2l4nssg5QyGzgbOuhzffZqQ5CCFZWVtm/f3jXa/x5N7uy44a2Vmo1
      LRdot19AJNZPZK8bYGN2vzYDu/6sEIKhocHH6kh2pzVHnxLJA6QBJC2NbVIhFAU6w/5mN+NL
      wyHDFltgq4IY63Lb5QEZT4odB65WasmieInkM5AGkLQ0thkDCCG4OrVuidZODa813hbwoI73
      i+k5nQ5eONJnSVsk1mMbAxim4I9+eKnZzbAcv9fFn/6H7za7GZJHIEMgSUsjDSBpaaQBJC2N
      9QYwNKYm77G8lmS3FYZiqWT5W9uZWmmLe7PzABRSy9xfSbM6P8W7l66iGQIhTG5dvcjiepql
      2XF++tO3KZRKfHjxXeZXHqY1C25fv05Dq3P18kVWElnuXrvMT378N2wWas3r3DPMHhigAb52
      tGqBTDpBraGTSieZHB9nM5tnenKCVLZAuVwmm9pgYnIGzbDFWtyeUq7U2NhYAaEzPnGH9fUs
      7d39tFMnX2lQz8yith1mdWGK6clpgpEoPpeDE6fPsrw4C8BWcombt+8zPzdN5/5Rpu/eYezF
      rxLvChPwy8KXL8KehECJ5VmyJQOtUkDVDQrbJVwuF41G48GfdQrb25TLJYq5NOX6kx9s8KzR
      3dOH1+1keeIGye0a92bvs7E0gzs+TCzsQ+gqHn8Qt9vFt3/lNzgYrDC+kuXa1RtceOkrAHx4
      9Qb1cpq6I0Bi9i657QpGvUCVEG1eGc1+EayfBnW4OTH2Ag61jMPtYnVxjvZohFqxuDOXLgQO
      h5NoJIJWKxFq78DjdvDw6OfnlfsTN0glUoy88R1+6+QYc2tF1qZvoLtqeM0S7b2HKU+/T8fA
      CNPj11lN1Tg2UiVZbzC/tIxTr/FLv/KbrC4s0tnXzbX1ZS585SWy2QKnTo02u3vPLLbJBXpe
      C2I+uQ7wqFwgVVNxuz27bL0l0FQdt+fjyjmZC/RkPBOb47YqHrfnMa9QPnXzS6xDBo6SlkYa
      QNLS2CYEcjgUvv/tMUu0TGHiUCxMhhPiCxewuFxWHdQh2QtsMwiWBTFPhhwEPxmyIEYi+Qyk
      ASQtjW3GAKYQ/OW7UxZpPf0Y4NhwN6PD3Za0R2Jf7GMAU/AnPx1vdjM+4rfeGJUGaAFkCCRp
      aaQBJC2NNICkpdmzMYAwGkxPz+Fri3BgX/8vfL9UKtLWFt6rt7cEvVHm/YuXaY/vp91ZYX4t
      zYtf/TphV4OLlz8kVzE4f6SXqeUs5196mcWJ63g6Bzl97CDp9QXuTM5x6OR5+gIql+8leeMr
      p3nrJ2/ytV/6JXwOuTOcHdizJ4DRqFCqG3R3dzE3M8mdO3cplopMTk6ynsqQz+eZuXeH23fu
      otq0ICazsUzswGlSi3PE+/pxYVAqN3D52njtta8R74qSTmbAoaDn57mzXEBTVQC6Yr0EfC6K
      W0Wujc+DViaxNEVmq4Fmj7VHCXv4BHB42jg1eph7U5NEIx0MhV0kNzao6zrlZIp2vxNPsI0O
      jxNNFx8dmmEn4kMjrF75gHxVRXH62NcbIV8osq+njcWpcQ4cPUXYrSGqOa6PT3Bg5ATFrXUE
      x2jogpFD+7l+c4JKw2R1I4Fa6Se/ucTCapLT+3/xqSj58tm7aVBhsra6Sv/gMLnEIibdDA8N
      sLy+SSQaxe1UcDqduJwKbpdiy8NMhBAYpuD1N14jk1hmfcvgYH+Bpc12Ap0D9EX9bK4nmZpP
      8NLXvsPivRu4Bg9y6+YNhnq7mJhd4fyrbxCLhEgkkvT29rB5OkFnv9woyy58KblA9Xodn2/3
      U9HtVhDzW2+M8jvfPClzgZ4TrabmAj3u5pdImoWcBpW0NNIAkpbGNrlATofCv/8nX7NEyzAN
      nI6ni417u0KWtEVib2xjAEVReOGoNbMjVg7CJM83MgSStDTSAJKWxjZxgmkK/tuPrliiJUwT
      xaITYhAgEJ95GPW+eDu/9rVj1ryPpCnYxwBC8O7t5WY344k4fahHGuAZR4ZAkpZGGkDS0kgD
      SFoay8cAidUlFlbWODJ6mlj0EwUvRo1Etk5fPGL1Wzade9fepRIc5HhvkJ9cvMmvf+d13nv3
      Molcme/99q+RWZ7lzvQ8gwdPkFqYQFX8HBzsYmktwfDIGEcP9HLzg/dIlUzGDvdyd3aZ/uGj
      ZBbv4owM8MZXXmh2F59bLDdA39B+itUaISPP+paHanaVRrlAe2c3mWwRTVfZSsxTqDvp6YnS
      HfKhtMUJep7dh9GhkSPcWMoTCO+jOxLE6Qny+usv88HNeVxAKpXi4JHjzEzdxWjUMRSdctWP
      YehUajVARTXCnOhxsJHdoqHrVKtVDFPDrNUwkY/qvWIPr6ugXq1QrtQItncy1NeN2qiD4qBS
      Uxnq76UvGmR2o0hH8Fk+3kdgmgaqqiIATVPRdJ17t8cZPX0C0zA4OjpGKbuBz9+GJ9RJrN3L
      WjLLixfOk0lvYhgOqrUtUoUCpXyRFy5coJjdYPTUV3GXi8jTv/aOPZkGHRraR8Dvw7O6zoGD
      B/G6neD0cPrMGQxdJXrqJNs1AYpJZzTMs10eK7g/v4pLNUhsrONz+1jZSDN0ZJQOv5u7t29z
      5MhBTGeIr792iuTKLFUlxMt9EW7dneaVs0eYXtjg/LnjJIsGLwx0cfv2OF/92tfJb8yx7+w5
      gs3u4nNMUzfH1TUNh8uFQ1FsVxDzeTh9qIf/+Puvf+7Xy4KY5mnZ8oQYl1ueeiJpLnJsJWlp
      pAEkLY1tDsjQdYNs0Zr5DisP20AITCF+IXYE8LqdRNr8TyAlxwDN0rLlGOCTKAr0RK2pwrLr
      CTES+yFDIElLIw0gaWlsEwIZpsm//uOfWaIlxE5IZYnWgy9W6D1K6/zRfr73jRNP/waSJ8Y2
      BhAC5je2mt2MpjAU72h2E1oWGQJJWhppAElLIw0gaWk+GgMI02R+aYm+aIhtzUsk5Mbh8lCt
      lCkXC4SjMYJeF6oJfo+L7XyOsg7xIGzWPZRyGXriXbS1hWjUG/iDQRq1KjjdeJwKGxurdHQO
      4BAq/mAIXa1hCAXTMAkGA828BrZACJMrb/4pjkPfpNtIsrCW4ey5U7z5N+8wMjbG+ZNHSa8t
      cndmjnC0m/TaCvg7ONIf5t69CQbHvsn5YwPcev/HlNoOM+QpM7m4zoETFwgbad6fSPI7v/r3
      mt1N2/GJQbBA13WEaaKqBe5NlPC3eXBhUq+VULwhJm/eJlU0GDt+EAQ4AmEQMH7rOi+98jrJ
      tQXSyQ08Xge66qWumDTqNdo8DjRDp15ZAp8XI5Wlvp2mWtdpC4c4ODKKq8WfRYri4MyZ09wp
      Cmbu3ccbDrC2kaOzM0Q+k0MA3f37iKytEnLrKMcv0MguMnLiLLlChbEjOwdunDx9lmtLRTJ5
      le/8g29x5Z1b5H0eejp8CPHZ27u0Mh/fdoqCWi2xmtgkEPAT7+0n6HUDCtGOdgxTEAxHOXvm
      FJgGCMHDJIrjp86wvrwIgMsXZHCoD1PVEAgM08Q0DEwhQHmwZw8KHdEuOqOdxLqiD+YHWxsh
      DKanppmfu0803kkwHKFSKdPVGaNRqVLc3ubmpb8j23DT3t1LcvYO+UKF2lYSZ1sPbsWkWNzm
      /vQUc7MzuN0GH1z8EEcoSL26ze2JSRq62exu2o5P5QLpWgNVF/h9HkwTQOzkmzgUag0Nj8uB
      qpv4vG7qdRWv14tDARMF8eCIl518CwVDrTNxbxJ3qJOjBwYe/JyHeq2GLxBAPMhlcSgKisOB
      qunPXD2AVbxxdj9/8Ovn2crlMBUnkUg7xe0S7R3tlLcLeAIh1leW6e/vpVypEQiFUYwGwunB
      53aCw4VaSJEzQ4QcDXQTOiIRyqUy4fYwDkVBVTU8nkenn9sxf8dKrc+VC+Rye3E9uEY/n/oS
      8DsfvObBvwMfJ4E5ARyfbqTLG+DMufOf0H7wc8HgZ79Bi6MoDqJdH59MH4nsrA2EO3Y2ETh0
      +DAA/sBOvpRpuj+VDOeP9jIAQNtHGh0d7R/9fbebv5Vp8chb0upIA0haGtukQiiAu0WnglxO
      OTPTLGxTEGNlEYtd6wFkQUzztJp6SqREYlekASQtjTSApKWxzSDYMEx++w9/1OxmSFoM2xhA
      AA3NaHYzJC2GDIEkLY00gKSl2dUAhrGT9WkYH4cmhq7z2UsHH79OVRvUGyr2WGGQSB7NrmOA
      ufv3OTpykNmFNXo7Q1RUhYDHgVbdYilT5/TxQyQ3c+wb6iOxusxWRefEyCDjEzN0dccoZ9bw
      du+jO+ikrClo+RWKrhgjfe3kSg3ikSCrqTz79w18Wf2VSD7F5x4EryU28Xh9VIRJf2eIWG8n
      9yfHqTcalMvbdPYM4Vcz4PQSCXnZLpYIB9vo7o2TXbnP8mqC/fvi9MYHmBi/hKYLtrpiuD0+
      DFM+KiTNYdcQyOsSTNybIhTuIBxux+f14nS6cPv8ZJNr+INhgh1dxCJhUusr1HUTTAPNFGhq
      HY/Xzfp6gmKxjM/nweMLsrG2QltbmGi8l56uCNuZNHU5+yNpErbJBXoWD8iQPPvIWSBJSyMN
      IGlppAEkLY1tUiEUBQ70WXOItqXbfwiBAGv07KqFtdfMlloPh7o/p2WbQbAsiHkyZEHMk2H7
      E2KAT604Pw2maVqmJYR4xMr386MF1l4zO2qZpomiKL9wzWxlACuPIbJKy+ongHjEeWPN1HqI
      Ha+/VVoPwyjbPgGs/EVaqWW1npVbE1qpZdfrb5XWo66VbcYAEkkzcP7gBz/4QbMb8ZBMYo25
      hSU8/hDj43fo7+vlw4uX6d03tOt8bb2c4+74fRweH6nVeVaTORSjSipXJeTRuXZ3jsG++GPf
      X1dr3Lp+k0hvP6tz06wl0/jdMHN/DtPpY3r8Nj0Dg0zcuIIvEtvZlvBRWo0qN2/corN3gPmp
      O2QLZdxCY2ZuHuHyM333Nj0DA9y9doVgVw9e16O16pVtZufmKVYb5FPrrKdyeB0GM3Pz4A4w
      efcWfQMD3Lr6IeFYLx7nbldLZ3Zymo3MFo1ynkRyE6/Px+z0NKW6TmrlPp5wN/n1GVJlJ53t
      j965WwiN2ckZNrJbmLUiC0sr+IMBZqenqTQMksuz+NpjZFenyVRdRMOPPlJWmCqzUzMksgVq
      xQyJVBqfz8fM9DRV1WRjcZpAJM7m8j1yNS+RsG+XPsLW5gb319MY5S2Wk1ncZp3Z+UVc/jAT
      t2/QNzDAlYuX7LUOsFWpM3b8EJlsHqHWyOUyqKaTx23pamg6ittBo1FFOAL0h5xkGqDWSiST
      OYKBzxfpOV1eYtEwpmFgOH30dwWZWclw6tQY5UKGgNdkM5unUm1gGLu3yun2EYu0YQoThIKq
      qmzktjl1aozSVhq/2yCd26JSVTGM3R/C3kCYnq4IDqFjetro7vCxmNhi7NQYxXwan1MnnctT
      qWqfI7HQydBQP06HAwQYmkYht0ls+CimVsPr85FNb1Kt1dAb2q5KiuIi3OZD1w3KDYNTIwPM
      3l+k78AxDLWKz+8lk05Ta9RQG/ruWg43bUEvumGAAF3TyGY3GTh0HL1Rwef3kt5M01DrNOq7
      t8vUG6SLDTxoVDSToMfBZqHC2Imj5HNZHEadbC5LTbXZQpjD0Mnk8rjcHuK9MSYn5+nuevz5
      WYrLx6EDw2znt2g0KuTLDXxOCPtd5Osmns/ZS4FA0zRU3UCt1ygUK3T4nWRyOQxcBNq7WZse
      p7v/8enbD7U0TaerdwCfQwfdIJvLYihugh3dLE+OExvof6xWKZckUzYZ7O9DrZYplaqEPAqZ
      XBZTcdMW7WZpcoJ4f9/jO2mqzMytcnD/Pto6OhnobqNQMyht5VA1DYfbj1bexB1of6yU0FV8
      HTEUrY6mqmSyW7R3hNneyqFqOg53ELWYxBN8/PqO0BoEInFQa4QiXfRH/WzXTAr5HKpm4PSE
      qBc28IWij9VqVMs06jXWNpI06g2qtTpuDDK5PA6Xh854jNnJGWLxLnuNAUxdJbmZo7c3vnMj
      qipupwtPwL+rU01DZ2N9g+6+Acx6karupC3gxeVQqGkmTsXE73/8IRxqrcx6YhNvMEw05KHc
      gK5oG4mNBPG+fnS1gaZpeD1uFJcH9y6hRqNaYiOZxhdsJ+gxqZtuYtEwiUSSnv5+tMbHWg6X
      B9cuWrXyNonNLKH2KG1eqOpOOtuDJBKpB1r1HS23G4fHg2u3gaOhsri8hsMboCcaIr1VZqCv
      h9xmkmCkG4cwELqGy+9H00wCPs8jpYQwSayv4mvrpCPgJpUr0tfTTXYzSTASwyF0hK7h9vtQ
      NQj4Hr1BrxAmibVV/O1d+J0G2WKNgd44mVSCts44iqlj6hqez6H1kGqtiscBpWqRdcUAAAEB
      SURBVLpJe8hLMpWht68P9cH1cjtd9jKARPJlY6sQSCL5spEGkLQ00gCS5xK9UaP6mFkssNFK
      sETyJLz1V/8bR/9ZRvv8bBZ19M1JloxeXj4SYyNbYcBfYt4Y4pXjfYBgeW4aJdBJJbeBP9qP
      WytSMjzyCSB5Nulob+fgwQNcvnYHLTNPQXOy7+AI2c0UM1ffIlH+xItraW7N5YlHAmSyed5+
      +y2mpyYpbG9LA0ieTWK9fSwtzNMV9pEqmRw+dJDk4izpTJbO7m683gAB74OpUl+EgLHF8voq
      W9sNurs6GRgaZGN9XU6DSp5fCpkEMwurhCIxRo8c4LPS4aQBJC3N/wcBtqSHXUZ5hQAAAABJ
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
